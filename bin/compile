#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>
set -e

# Parse params
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

# Default version
version="5.1.0"

# Read version from configured JEMALLOC_VERSION
# if [ -f $ENV_DIR/JEMALLOC_VERSION ]; then
  # version=$(cat $ENV_DIR/JEMALLOC_VERSION)
# fi

tar_dist=jemalloc-$version.tar.bz2

[ ! -d ${CACHE_DIR} ] && mkdir -p ${CACHE_DIR}

# Download jemalloc if not in cache
if [ ! -f ${CACHE_DIR}/${tar_dist} ]; then
  url="https://github.com/megafono/heroku-buildpack-jemalloc/releases/download/$STACK/$tar_dist"
  echo -n "-----> Downloading ${url}....."
  curl --silent --location $url > ${CACHE_DIR}/${tar_dist}

  echo " done"
fi

echo -n "-----> Installing jemalloc"
dest="$BUILD_DIR/vendor/jemalloc"
mkdir -p $dest
tar -xjf ${CACHE_DIR}/${tar_dist} -C $dest

echo "-----> Building runtime environment"
mkdir -p $BUILD_DIR/.profile.d

cat <<'EOF' > $BUILD_DIR/.profile.d/jemalloc.sh
export PATH="$PATH:/app/vendor/jemalloc/bin"

# Configure LD_PRELOAD when JEMALLOC_ENABLED is set to "true". Setting this can
# be tricky for people and it occasionally changes with new versions.
if [ "$JEMALLOC_ENABLED" = 'true' ]; then
  export LD_PRELOAD="/app/vendor/jemalloc/lib/libjemalloc.so $LD_PRELOAD"
fi
EOF
